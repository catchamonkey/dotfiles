set title
set background=dark
syntax on
"colorscheme monokai
set nowrap
set autowrite
"set mouse=a

let g:go_highlight_functions = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_auto_type_info = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_extra_types = 1

let g:mustache_abbreviations = 1

let NERDTreeShowHidden = 1

" go test alternate switches
autocmd Filetype go command! -bang A call go#alternate#Switch(<bang>0, 'edit')
autocmd Filetype go command! -bang AV call go#alternate#Switch(<bang>0, 'vsplit')
autocmd Filetype go command! -bang AS call go#alternate#Switch(<bang>0, 'split')
autocmd Filetype go command! -bang AT call go#alternate#Switch(<bang>0, 'tabe')

au FileType go nmap <leader>b <Plug>(go-build)
au FileType go nmap <leader>d <Plug>(go-doc)

" set twig files to highlight using smarty syntax highlighting
au BufNewFile,BufRead *.twig setf smarty
" set max width of MD lines to 80
au BufRead,BufNewFile *.md setlocal textwidth=80

highlight GitGutterAdd    guifg=#669900 ctermfg=46 
highlight GitGutterChange guifg=#bbbb00 ctermfg=226
highlight GitGutterDelete guifg=#ff2222 ctermfg=196
highlight! link SignColumn LineNr

set autoindent
set cindent

set tabstop=4
set shiftwidth=4
set softtabstop=4
set smarttab
set expandtab
set autochdir

set number

set wrap linebreak nolist

autocmd bufenter *.handlebars,*.hbs,*.scss,*.js setlocal ts=2 sts=2 sw=2

" change the default wait time before running any updates (git gutter e.g.)
set updatetime=250

let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']

" set leader key
let mapleader=","

" map <C-w> :tabclose<CR>
map <C-Tab> :tabn<CR>
map <C-S-Tab> :tabp<CR>
" map <C-n> :tabnew<CR>
map <C-o> :Explore<CR>
" window resizing
map - <C-w><
map = <C-w>>

nmap <leader>n :NERDTreeToggle<CR>
nmap <leader>f :NERDTreeFind<CR>

" If you want to open it only if you're opening Vim with a supported file/files
"autocmd VimEnter * nested :call tagbar#autoopen(1)
" For opening Tagbar also if you open a supported file in an already running
"autocmd FileType * nested :call tagbar#autoopen(0)
" auto close nerdtree if it's the last window
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" NERDTree settings
" https://github.com/scrooloose/nerdtree/pull/546
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'

""
"" Backup and swap files
""
set backupdir=~/.vim/_backup//    " where to put backup files.
set directory=~/.vim/_temp//      " where to put swap files. 

" Disable Ex-mode
noremap Q <nop>

" save current file
noremap <leader>w :update<CR>

" Autoload NERDTree
autocmd vimenter * :NERDTreeToggle
if argc() > 0
    if isdirectory(argv(0))
        bd
        autocmd VimEnter * wincmd h
        let cd_cmd = "cd " . argv(0)
        execute cd_cmd
    else
        " Move the focus to the right window if we're editing a file/dir
        autocmd VimEnter * wincmd l
    endif
endif

let g:go_fmt_command = "goimports"

call plug#begin('~/.vim/plugged')

" Make sure you use single quotes

Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'stephpy/vim-php-cs-fixer'
" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
Plug 'junegunn/vim-easy-align'
Plug 'mustache/vim-mustache-handlebars'
" On-demand loading
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'Xuyuanp/nerdtree-git-plugin'
" Using a tagged release; wildcard allowed (requires git 1.9.2 or above)
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
" Plugin options
" Plug 'nsf/gocode', { 'tag': 'v.20150303', 'rtp': 'vim' }
" Plugin outside ~/.vim/plugged with post-update hook
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'airblade/vim-gitgutter'
Plug 'ctrlpvim/ctrlp.vim'

Plug 'itchyny/lightline.vim'

Plug 'tpope/vim-fugitive'

Plug 'morhetz/gruvbox'

Plug 'gyim/vim-boxdraw'

Plug 'uarun/vim-protobuf'

" Add plugins to &runtimepath
call plug#end()

colorscheme gruvbox
